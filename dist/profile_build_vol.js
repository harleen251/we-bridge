/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/profile_build_vol.js":
/*!**********************************!*\
  !*** ./src/profile_build_vol.js ***!
  \**********************************/
/***/ (() => {

eval("class Volunteer {\n    constructor(txtFirstName,txtLastName,txtPhotoLink,txtProvince,txtCity,txtPostalCode,txtAge,txtGender,txtLanguage,txtBio,txtPhoneNumber,txtEmail,skills,experience,certificate,interest,availability){\n        this.firstName = txtFirstName;\n        this.lastName = txtLastName;\n        this.photoLink = txtPhotoLink;\n        this.province = txtProvince;\n        this.city = txtCity;\n        this.postalCode = txtPostalCode;\n        this.age = txtAge;\n        this.gender = txtGender;\n        this.language = txtLanguage;\n        this.bio = txtBio;\n        this.phoneNumber = txtPhoneNumber;\n        this.email = txtEmail;\n        this.skills = skills;\n        this.experience = experience;\n        this.certificate = certificate;\n        this.interest = interest;\n        this.availability = availability;\n    }\n}\n\nclass Experience {\n    constructor(txtJobTitle,txtCompany,txtLocation,txtStartDate,txtEndDate){\n        this.jobTitle = txtJobTitle;\n        this.company = txtCompany;\n        this.location = txtLocation;\n        this.startDate = txtStartDate;\n        this.endDate = txtEndDate;\n    }\n}\n\nclass Certificate {\n    constructor(txtCertifiacteName,txtIssuingOrg,txtDateObtained){\n        this.certificateName = txtCertifiacteName;\n        this.issuingOrg = txtIssuingOrg;\n        this.dateObtained = txtDateObtained;\n    }\n}\n\nconst volunteerArray = [];\nconst skillArray = [];\nconst interestArray = [];\n\nconst form_Profile = document.getElementById(\"profile_Form\")\nsaveBtn.addEventListener(\"click\", function (event){\n    event.preventDefault();\n    const txtFirstName = form_Profile.querySelector(\"#txtFirstName\");\n    const txtLastName = form_Profile.querySelector(\"#txtLastName\");\n    const txtPhotoLink = form_Profile.querySelector(\"#txtPhotoLink\");\n    const txtProvince = form_Profile.querySelector(\"#txtProvince\");\n    const txtCity = form_Profile.querySelector(\"#txtCity\");\n    const txtPostalCode = form_Profile.querySelector(\"#txtPostalCode\");\n    const txtAge = form_Profile.querySelector(\"#txtAge\");\n    const txtGender = form_Profile.querySelector(\"#txtGender\");\n    const txtLanguage = form_Profile.querySelector(\"#txtLanguage\");\n    const txtBio = form_Profile.querySelector(\"#txtBio\");\n    const txtPhoneNumber = form_Profile.querySelector(\"#txtPhoneNumber\");\n    const txtEmail = form_Profile.querySelector(\"#txtEmail\");\n    \n    const expArray = [];\n    const inputGroup = document.getElementById(\"inputGroup\");\n    const childDivs = inputGroup.querySelectorAll(\"div\");\n    const numberOfDivs = childDivs.length;\n    for(let k = 0; k < numberOfDivs; k++) {\n        let txtJobTitle = document.getElementById(`txtJobTitle${k}`).value;\n        let txtCompany = document.getElementById(`txtCompany${k}`).value;\n        let txtLocation = document.getElementById(`txtLocation${k}`).value;\n        let txtStartDate = document.getElementById(`txtStartDate${k}`).value;\n        let txtEndDate = document.getElementById(`txtEndDate${k}`).value;\n        let experience = new Experience(txtJobTitle,txtCompany,txtLocation,txtStartDate,txtEndDate);\n        expArray.push(experience);\n    }\n\n    const certArray = [];\n    const inputGroupCert = document.getElementById(\"inputGroupCert\");\n    const childDivsCert = inputGroupCert.querySelectorAll(\"div\");\n    const numberOfDivsCert = childDivsCert.length;\n    for(let m = 0; m < numberOfDivsCert; m++) {\n        let txtCertifiacteName = document.getElementById(`txtCertifiacteName${m}`).value;\n        let txtIssuingOrg = document.getElementById(`txtIssuingOrg${m}`).value;\n        let txtDateObtained = document.getElementById(`txtDateObtained${m}`).value;\n        let certificate = new Certificate(txtCertifiacteName,txtIssuingOrg,txtDateObtained);\n        certArray.push(certificate);\n    }\n\n    const availability = document.querySelectorAll(\"#availability input\");\n    const availabilityArray = [];\n    for ( let i of availability) {\n        if( i.checked === true ) {\n            availabilityArray.push(i.value);\n        }\n    }\n    \n    const volunteer = new Volunteer(txtFirstName.value,txtLastName.value,txtPhotoLink.value,txtProvince.value,txtCity.value,txtPostalCode.value,txtAge.value,txtGender.value,txtLanguage.value,txtBio.value,txtPhoneNumber.value,txtEmail.value,skillArray,expArray,certArray,interestArray,availabilityArray);\n    volunteerArray.push(volunteer);\n    console.log(volunteerArray);\n   \n})\n\nlet j = 0;\nconst addNewExpBtn = document.getElementById(\"addNewExpBtn\");\naddNewExpBtn.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    j += 1;\n    const div = document.createElement(\"div\");\n    div.setAttribute(\"id\", `expInputGroup${j}`);\n    div.innerHTML = `\n    <label for=\"txtJobTitle${j}\">Job Title</label>\n    <input type=\"text\" id=\"txtJobTitle${j}\">\n    <label for=\"txtCompany${j}\">Company Name</label>\n    <input type=\"text\" id=\"txtCompany${j}\">\n    <label for=\"txtLocation${j}\">Location</label>\n    <input type=\"text\" id=\"txtLocation${j}\">\n    <label for=\"txtStartDate${j}\">Start Date</label>\n    <input type=\"date\" id=\"txtStartDate${j}\">\n    <label for=\"txtEndDate${j}\">End Date</label>\n    <input type=\"date\" id=\"txtEndDate${j}\">\n    `;\n    (document.getElementById(`inputGroup`)).append(div);\n})\n\nlet l = 0;\nconst addNewCertBtn = document.getElementById(\"addNewCertBtn\");\naddNewCertBtn.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    l += 1;\n    const div = document.createElement(\"div\");\n    div.setAttribute(\"id\", `certInputGroup${l}`);\n    div.innerHTML = `\n    <label for=\"txtCertifiacteName${l}\">Certificate Name</label>\n    <input type=\"text\" id=\"txtCertifiacteName${l}\">\n    <label for=\"txtIssuingOrg${l}\">Issuing Organization</label>\n    <input type=\"text\" id=\"txtIssuingOrg${l}\">\n    <label for=\"txtDateObtained${l}\">Date Obtained</label>\n    <input type=\"date\" id=\"txtDateObtained${l}\">\n    `;\n    (document.getElementById(`inputGroupCert`)).append(div);\n})\n\nchoose_interest.addEventListener(\"click\", function (event) {\n    option_interest.style.display = \"block\";\n    event.preventDefault();\n})\n\nsave_interests.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    const interest = document.querySelectorAll(\"#interest input\");\n    for ( let i of interest) {\n        if( i.checked === true ) {\n            interestArray.push(i.value);\n        }\n    }\n    option_interest.style.display = \"none\";\n})\n\nchoose_skill.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    option_skill.style.display = \"block\";\n})\n\nsave_skill.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    const skill = document.querySelectorAll(\"#skill input\");\n    for ( let i of skill) {\n        if( i.checked === true ) {\n            skillArray.push(i.value);\n        }\n    }\n    option_skill.style.display = \"none\";\n})\n\nnext_Info.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    preference_background.style.display = \"block\";\n    personal_Info.style.display = \"none\";\n})\n\nedit_preference_background.addEventListener(\"click\" ,function (event) {\n    event.preventDefault();\n    preference_background.style.display = \"block\";\n    personal_Info.style.display = \"none\";\n})\n\nedit_personal_Info.addEventListener(\"click\" ,function (event) {\n    event.preventDefault();\n    preference_background.style.display = \"none\";\n    personal_Info.style.display = \"block\";\n})//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/profile_build_vol.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/profile_build_vol.js"]();
/******/ 	
/******/ })()
;